<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ output extension=".cs" #>
namespace System {
	public static class FuncCurryExtensions {
		public static Func<TResult> Curry<T1, TResult>(this Func<T1, TResult> func, T1 arg1) {
			return new Func<TResult>(() => func(arg1));
		}
<# for (int i = 2; i <= 16; i++) { #>
<# for (int j = 1; j < i; j++) { #>

		public static Func<<# for (int k = j + 1; k <= i; k++) { #>T<#= k #>, <# } #>TResult> Curry<<# for (int k = 1; k <= i; k++) { #>T<#= k #>, <# } #>TResult>(this Func<<# for (int k = 1; k <= i; k++) { #>T<#= k #>, <# } #>TResult> func<# for (int k = 1; k <= j; k++) { #>, T<#= k #> arg<#= k #><# } #>) {
			return new Func<<# for (int k = j + 1; k <= i; k++) { #>T<#= k #>, <# } #>TResult>((arg<#= j + 1 #><#for (int k = j + 2; k <= i; k++) { #>, arg<#= k #><# } #>) => func(arg1<# for (int k = 2; k <= i; k++) { #>, arg<#= k #><# } #>));
		}
<# } #>

		public static Func<TResult> Curry<<# for (int j = 1; j <= i; j++) { #>T<#= j #>, <# } #>TResult>(this Func<<# for (int j = 1; j <= i; j++) { #>T<#= j #>, <# } #>TResult> func<# for (int j = 1; j <= i; j++) { #>, T<#= j #> arg<#= j #><# } #>) {
			return new Func<TResult>(() => func(arg1<# for (int j = 2; j <= i; j++) { #>, arg<#= j #><# } #>));
		}
<# } #>
	}
}